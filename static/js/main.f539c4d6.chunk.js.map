{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","placeholder","onChange","type","App","useState","setMonsters","filtered","setFiltered","useEffect","fetch","then","res","json","users","e","console","log","target","value","m","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAgBeA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAED,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCGdC,G,MAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCMZM,G,MAXA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,YAAYC,EAAc,EAAdA,SAC3B,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbC,SAAUA,MCyBDE,MA7Bf,WAAgB,IAAD,EAEmBC,mBAAS,IAF5B,mBAENP,EAFM,KAEIQ,EAFJ,OAGmBD,mBAAS,IAH5B,mBAGNE,EAHM,KAGIC,EAHJ,KAoBb,OATAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,EAAYM,GACZR,EAAYQ,QAEf,IAGD,sBAAKxB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQY,SAlBK,SAACa,GAChBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,IAAIC,EAAItB,EAASuB,QAAO,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAAcC,SAASR,EAAEG,OAAOC,MAAMG,kBACtFd,EAAY,YAAIY,KAecnB,YAAY,oBACxC,cAAC,EAAD,CAAUH,SAAUS,QCjBXiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f539c4d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"moster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n          <h2>{props.monster.name}</h2>\r\n          <h3>{props.monster.email}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search.styles.css\";\r\n\r\nconst Search = ({placeholder,onChange}) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport Search from './components/search/search.component';\n\nfunction App() {\n\n  const [monsters, setMonsters] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n\n  const onChange = (e) => {\n    console.log(e.target.value);\n    let m = monsters.filter(monster => monster.name.toLowerCase().includes(e.target.value.toLowerCase()))\n    setFiltered([...m]);\n\n  }\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => {\n        setFiltered(users);\n        setMonsters(users);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>MONSTERS ROLODEX</h1>\n      <Search onChange={onChange} placeholder='Search Monsters'/>\n      <CardList monsters={filtered} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}